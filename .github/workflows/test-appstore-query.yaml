name: Debug TestFlight - Show All Builds

on:
  workflow_dispatch:

jobs:
  debug-testflight:
    runs-on: macos-15
    steps:
      - name: Setup
        run: |
          mkdir -p ios/fastlane
          
          # Create API key
          cat > ios/fastlane/api_key.json << 'EOF'
          {
            "key_id": "4QM5FBBF6P",
            "issuer_id": "63421d99-7718-41a8-99c8-01548625694f",
            "key": "-----BEGIN PRIVATE KEY-----\nMIGTAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBHkwdwIBAQQghnrjw2IY0M/VODiY\nk6Ex1H0W9jh2ws/5GXpwXTcF6xKgCgYIKoZIzj0DAQehRANCAARF2go6/YIvc5qz\noeEsjfmxRtEWSdA7QQQKOYjSkD5SqwAWHuTSJfS+5mw/J4UcUNvRe4MwBRZ4FtBj\nhrCw4w+O\n-----END PRIVATE KEY-----",
            "duration": 1200,
            "in_house": false
          }
          EOF
          
          gem install fastlane --no-document

      - name: Check All TestFlight Builds
        working-directory: ios
        run: |
          # Use Fastlane's pilot to list all builds
          cat > fastlane/Fastfile << 'EOF'
          default_platform(:ios)
          
          platform :ios do
            desc "List all TestFlight builds"
            lane :list_all_builds do
              # This will show ALL builds in TestFlight
              sh("fastlane pilot builds --app_identifier com.littletalks.app --api_key_path fastlane/api_key.json")
            end
          end
          EOF
          
          echo "🔍 Listing ALL TestFlight builds..."
          fastlane list_all_builds || true
          
          echo ""
          echo "🔍 Now let's check what latest_testflight_build_number returns for different queries..."
          
          # Create test lane
          cat > fastlane/Fastfile << 'EOF'
          default_platform(:ios)
          
          platform :ios do
            desc "Test different queries"
            lane :test_queries do
              puts "\n=== Testing different query approaches ==="
          
              # Test 1: No version specified
              puts "\n1️⃣ No version specified:"
              begin
                build = latest_testflight_build_number(
                  api_key_path: "fastlane/api_key.json",
                  app_identifier: "com.littletalks.app"
                )
                version = lane_context[SharedValues::LATEST_TESTFLIGHT_VERSION]
                puts "   Result: Build #{build} from version #{version}"
              rescue => e
                puts "   Error: #{e.message}"
              end
          
              # Test 2: With initial_build_number
              puts "\n2️⃣ With initial_build_number 0:"
              begin
                build = latest_testflight_build_number(
                  api_key_path: "fastlane/api_key.json",
                  app_identifier: "com.littletalks.app",
                  initial_build_number: 0
                )
                version = lane_context[SharedValues::LATEST_TESTFLIGHT_VERSION]
                puts "   Result: Build #{build} from version #{version}"
              rescue => e
                puts "   Error: #{e.message}"
              end
          
              # Test 3: Check multiple versions
              puts "\n3️⃣ Checking specific versions:"
              ["1.5.13", "1.5.14", "1.5.15", "1.5.16", "1.5.17"].each do |v|
                begin
                  build = latest_testflight_build_number(
                    api_key_path: "fastlane/api_key.json",
                    app_identifier: "com.littletalks.app",
                    version: v,
                    initial_build_number: 0
                  )
                  puts "   Version #{v}: Build #{build}"
                rescue => e
                  puts "   Version #{v}: No builds or error"
                end
              end
          
              # Test 4: Use app_store_build_number instead
              puts "\n4️⃣ Using app_store_build_number:"
              begin
                build = app_store_build_number(
                  api_key_path: "fastlane/api_key.json",
                  app_identifier: "com.littletalks.app",
                  live: false
                )
                puts "   Result: Build #{build}"
              rescue => e
                puts "   Error: #{e.message}"
              end
            end
          end
          EOF
          
          echo ""
          fastlane test_queries